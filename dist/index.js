var T=Object.create;var w=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var L=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var _=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of C(t))!J.call(e,s)&&s!==n&&w(e,s,{get:()=>t[s],enumerable:!(r=E(t,s))||r.enumerable});return e};var B=(e,t,n)=>(n=e!=null?T(N(e)):{},_(t||!e||!e.__esModule?w(n,"default",{value:e,enumerable:!0}):n,e));var S=L((U,P)=>{P.exports=h;h.flatten=h;h.unflatten=O;function x(e){return e&&e.constructor&&typeof e.constructor.isBuffer=="function"&&e.constructor.isBuffer(e)}function $(e){return e}function h(e,t){t=t||{};let n=t.delimiter||".",r=t.maxDepth,s=t.transformKey||$,i={};function c(l,g,f){f=f||1,Object.keys(l).forEach(function(o){let a=l[o],u=t.safe&&Array.isArray(a),p=Object.prototype.toString.call(a),d=x(a),b=p==="[object Object]"||p==="[object Array]",y=g?g+n+s(o):s(o);if(!u&&!d&&b&&Object.keys(a).length&&(!t.maxDepth||f<r))return c(a,y,f+1);i[y]=a})}return c(e),i}function O(e,t){t=t||{};let n=t.delimiter||".",r=t.overwrite||!1,s=t.transformKey||$,i={};if(x(e)||Object.prototype.toString.call(e)!=="[object Object]")return e;function l(o){let a=Number(o);return isNaN(a)||o.indexOf(".")!==-1||t.object?o:a}function g(o,a,u){return Object.keys(u).reduce(function(p,d){return p[o+n+d]=u[d],p},a)}function f(o){let a=Object.prototype.toString.call(o),u=a==="[object Array]",p=a==="[object Object]";if(o){if(u)return!o.length;if(p)return!Object.keys(o).length}else return!0}return e=Object.keys(e).reduce(function(o,a){let u=Object.prototype.toString.call(e[a]);return!(u==="[object Object]"||u==="[object Array]")||f(e[a])?(o[a]=e[a],o):g(a,o,h(e[a],t))},{}),Object.keys(e).forEach(function(o){let a=o.split(n).map(s),u=l(a.shift()),p=l(a[0]),d=i;for(;p!==void 0;){if(u==="__proto__")return;let b=Object.prototype.toString.call(d[u]),y=b==="[object Object]"||b==="[object Array]";if(!r&&!y&&typeof d[u]<"u")return;(r&&!y||!r&&d[u]==null)&&(d[u]=typeof p=="number"&&!t.object?[]:{}),d=d[u],a.length>0&&(u=l(a.shift()),p=l(a[0]))}d[u]=O(e[o],t)}),i}});function j(e){return t=>n=>e({settings:t,env:n})}var m=B(S(),1);function A(e){if(e.pathPattern===void 0)throw new Error("The pathPattern setting must be defined and include the {language} placeholder. An example would be './resources/{language}.json'.");if(e.pathPattern.includes("{language}")===!1)throw new Error("The pathPattern setting must be defined and include the {language} placeholder. An example would be './resources/{language}.json'.");if(e.pathPattern.endsWith(".json")===!1)throw new Error("The pathPattern setting must end with '.json'. An example would be './resources/{language}.json'.")}var F=j(({settings:e,env:t})=>({id:"samuelstroschein.inlangPluginJson",async config(){return A(e),{languages:await K({$fs:t.$fs,settings:e}),readResources:async n=>M({...n,$fs:t.$fs,settings:e}),writeResources:async n=>W({...n,$fs:t.$fs,settings:e})}}}));async function K(e){let[t,n]=e.settings.pathPattern.split("{language}"),r=await e.$fs.readdir(t),s=[];for(let i of r)if(i.includes("."))i.endsWith(".json")&&s.push(i.replace(".json",""));else for(let c of await e.$fs.readdir(`${t}${i}`))c.endsWith(".json")&&!s.some(l=>l===i)&&s.push(i);return s}async function M(e){let t=[];for(let n of e.config.languages){let r=e.settings.pathPattern.replace("{language}",n);try{let s=JSON.parse(await e.$fs.readFile(r,{encoding:"utf-8"})),i=(0,m.default)(s);t.push(I(i,n,e.settings.variableReferencePattern))}catch{let s={},i=`${r.replace("/*.json","")}`,c=await e.$fs.readdir(i);for(let l of c){let g={};g[l.replace(".json","")]=JSON.parse(await e.$fs.readFile(`${i}/${l}`,{encoding:"utf-8"}));let f=(0,m.default)(g);s={...s,...f}}t.push(I(s,n,e.settings.variableReferencePattern))}}return t}async function W(e){let[,t]=e.settings.pathPattern.split("{language}"),n=t.startsWith("/");for(let r of e.resources){let s=e.settings.pathPattern.replace("{language}",r.languageTag.name);if(n){let i=structuredClone(r.body),c=[];i.map(l=>{let f=l.id.name.split(".").shift();f&&!c.some(o=>o===f)&&c.push(f)});for(let l of c){let g=i.filter(o=>o.id.name.startsWith(l)).map(o=>({...o,id:{...o.id,name:o.id.name.replace(`${l}.`,"")}})),f={type:r.type,languageTag:r.languageTag,body:g};await e.$fs.writeFile(s.replace("*",l),R(f,e.settings.variableReferencePattern))}}else await e.$fs.writeFile(s,R(r,e.settings.variableReferencePattern,e.settings.serialize))}}function I(e,t,n){return{type:"Resource",languageTag:{type:"LanguageTag",name:t},body:Object.entries(e).map(([r,s])=>D(r,s,n))}}function D(e,t,n){let r=n&&(n[1]?new RegExp(`(\\${n[0]}[^\\${n[1]}]+\\${n[1]})`,"g"):new RegExp(`(${n}\\w+)`,"g")),s=[];if(r){let i=t.split(r);for(let c=0;c<i.length;c++)r.test(i[c])?s.push({type:"Placeholder",body:{type:"VariableReference",name:n[1]?i[c].slice(n[0].length,n[1].length*-1):i[c].slice(n[0].length)}}):i[c]!==""&&s.push({type:"Text",value:i[c]})}else s.push({type:"Text",value:t});return{type:"Message",id:{type:"Identifier",name:e},pattern:{type:"Pattern",elements:s}}}function R(e,t,n){let r={};e.body.forEach((i,c)=>{let[l,g]=v(i,t);r={...r,[l.slice(-1)==="."?l.slice(0,-1)+"FINAL_CHAR_DOT":l]:g}});let s=n?.flatten?n?.flatten:!1;return JSON.stringify(s?r:(0,m.unflatten)(r),null,n?.space||2).replace(/FINAL_CHAR_DOT/gm,".")}function v(e,t){let n=[];for(let s of e.pattern.elements)s.type==="Text"||!t?n.push(s.value):s.type==="Placeholder"&&(t[1]?n.push(`${t[0]}${s.body.name}${t[1]}`):n.push(`${t[0]}${s.body.name}`));let r=n.join("");return[e.id.name,r]}export{F as default};
/*! Bundled license information:

@inlang/core/dist/plugin/pluginBuildConfig.js:
  (*! DON'T TOP-LEVEL IMPORT ESBUILD PLUGINS. USE DYNAMIC IMPORTS. *)
  (*! See https://github.com/inlang/inlang/issues/486 *)
*/
